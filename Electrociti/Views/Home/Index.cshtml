@{
    ViewData["Title"] = "Home Page";
}
@using Electrociti.ViewModels
@model EmployeeServiceEmployeeServices


<div class="main">
    <div class="filters">
        <h3>Фильтры</h3>
        <select class="comboboxFilter" id="combobox">
            <option value="1">Услуга</option>
            @foreach (var service in Model.Services)
            {
                <option value="@service.ServiceId">@service.ServiceName</option>
            }
        </select>
        <a class="textFilterA">Стоимость</a>
        <div>
            <input class="textFilter" type="text" value="от" onclick="clearText"/>
            <input class="textFilter" type="text" value="до" />
        </div>
        <a class ="textFilterA">Опыт работы исполнителя</a>
        <select class="comboboxFilterAge" id="combobox">
            <option value="1">Любой</option>
            <option value="2">Менее 1 года</option>
            <option value="3">2 года</option>
            <option value="4">3 года и больше</option>
        </select>
        <a class="textFilterA">Исполнитель закупает материал</a>
        <input type="checkbox" value="false" name="byMaterial"/>
        <label class="labelFilterA">Да</label>
        <a class="textFilterA">Рейтинг исполнителя</a>
        <input type="checkbox" value="false" name="rate"/>
        <label class ="labelFilterA">4 и выше</label>
    </div>
    <div class="cards">
        @foreach (var employee in Model.Employee.Where(e => e.EmployeeRole == 2))
        {
            <div onclick="window.location.href='/Home/Master'" class="card">
                <img class="imgMaster" src="@employee.EmployeeImage" />
                <a class="textNameCard">@employee.EmployeeName</a>
                <a class="textDescriptionCard">@employee.EmployeeDescription</a>
                <a class="textAddressCard">@employee.EmployeeAddress</a>
                <img class="imgRate" src="~/img/icons8-star-96.png" />
                <img class="imgFavorite" src="~/img/icons8-favorite-96-standart.png" />
                <div style="flex-direction:column;grid-column:2;grid-row:2">
                    @foreach (var service in Model.EmployeeServices
                   .Join(Model.Services, es => es.ServiceId, s => s.ServiceId, (es, s) => new { es, s })
                   .Join(Model.Employee, es2 => es2.es.EmployeeId, e => e.EmployeeId, (es2, e) => new { es2.es, es2.s, e })
                   .Where(e2 => e2.e.EmployeeId == employee.EmployeeId)
                   .Take(3))
                    {
                        <div class="divCostCard">
                            <a class="textCostCard">@service.s.ServiceCost</a>
                        </div>
                    }
                </div>
                <div style="flex-direction:column;grid-column:2;grid-row:2">
                    @foreach (var service in Model.EmployeeServices
                   .Join(Model.Services, es => es.ServiceId, s => s.ServiceId, (es, s) => new { es, s })
                   .Join(Model.Employee, es2 => es2.es.EmployeeId, e => e.EmployeeId, (es2, e) => new { es2.es, es2.s, e })
                   .Where(e2 => e2.e.EmployeeId == employee.EmployeeId)
                   .Take(3))
                    {
                        <div class="divCostCard">
                            <a class="textNameSCard">@service.s.ServiceName</a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
